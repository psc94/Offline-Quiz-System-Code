import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class quiz extends JFrame
{
		int i=0,j=0,k=0;
		String st;
		JLabel lb[]=new JLabel[7];
		JTextArea ta=new JTextArea();
		JRadioButton rb[]=new JRadioButton[4];
		JButton bt[]=new JButton[3];
		ButtonGroup bg=new ButtonGroup();
		Container c;
		JTextField tf;
		Connection con,con1;
		ResultSet rst,rst1;
		Statement stm,stm1;
		String ques="";
		String op1="";
		String op2="";
		String op3="";
		String op4="";
		String rbv="";
		String ans[]=new String[26];
		Font f=new Font("Papyrus",Font.BOLD,16);
		Font f1=new Font("Papyrus",Font.BOLD,20);
	quiz(ResultSet rs,String ag)
	{
		super("Offline Test System");
		rst=rs;
		setSize(700,600);
		setResizable(false);
		setLocationRelativeTo(null);
		setLayout(null);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		ImageIcon ic =new ImageIcon("bk1.jpg");
		for(int g=0;g<=26;g++)
		{
				ans[i]="0";
		}
		lb[6] = new JLabel(ic);
		setContentPane(lb[6]);
		c=getContentPane();
		//Database Connectivity
		try
		{
		Class.forName("com.mysql.jdbc.Driver");
		con=DriverManager.getConnection("jdbc:mysql://localhost/online_quiz","root","prateek");
		stm=con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
		System.out.println("Coonection Successful");
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}		
		try
		{
			ques=rst.getString(2);
			op1=rst.getString(3);
			op2=rst.getString(4);
			op3=rst.getString(5);
			op4=rst.getString(6);
			j=rst.getInt(1);
			st=rst.getString(1);
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
		lb[0]=new JLabel("Ques. ");
		lb[0].setBounds(20,80,70,50);
		lb[0].setFont(f1);
		add(lb[0]);
		ta.setEditable(false);
		ta.setLineWrap(true);
		ta.setWrapStyleWord(true);
		ta.setBounds(90,80,560,80);
		ta.setFont(f1);
		add(ta);
		rb[0]=new JRadioButton("A. ");
		rb[1]=new JRadioButton("B. ");
		rb[2]=new JRadioButton("C. ");
		rb[3]=new JRadioButton("D. ");
		rb[0].setBounds(20,320,50,30);
		rb[1].setBounds(360,320,50,30);
		rb[2].setBounds(20,400,50,30);
		rb[3].setBounds(360,400,50,30);
		rb[0].setFont(f);
		rb[1].setFont(f);
		rb[2].setFont(f);
		rb[3].setFont(f);
		bg.add(rb[0]);
		bg.add(rb[1]);
		bg.add(rb[2]);
		bg.add(rb[3]);
		c.add(rb[0]);
		c.add(rb[1]);
		c.add(rb[2]);
		c.add(rb[3]);
		rb[0].addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent ae)
			{
				rbv = ae.getActionCommand();
			}
		});
		rb[1].addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent ae)
			{
				rbv = ae.getActionCommand();
			}
		});
		rb[2].addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent ae)
			{
				rbv = ae.getActionCommand();
			}
		});
		rb[3].addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent ae)
			{
				rbv = ae.getActionCommand();
			}
		});
		lb[2]=new JLabel();
		lb[3]=new JLabel();
		lb[4]=new JLabel();
		lb[5]=new JLabel();
		lb[2].setBounds(90,305,200,70);
		lb[3].setBounds(430,305,220,70);
		lb[4].setBounds(90,385,220,70);
		lb[5].setBounds(430,385,250,70);
		lb[2].setForeground(new Color(0,0,0));
		lb[3].setForeground(new Color(0,0,0));
		lb[4].setForeground(new Color(0,0,0));
		lb[5].setForeground(new Color(0,0,0));
		lb[2].setFont(f);
		lb[3].setFont(f);
		lb[4].setFont(f);
		lb[5].setFont(f);
		c.add(lb[2]);
		c.add(lb[3]);
		add(lb[4]);
		add(lb[5]);
		bt[0]=new JButton(">>");
		bt[0].setBounds(540,530,125,30);
		bt[0].setFont(f);
		bt[0].setEnabled(false);
		add(bt[0]);
		bt[1]=new JButton(ag);
		bt[1].setBounds(395,530,125,30);
		bt[1].setEnabled(false);
		bt[1].setFont(f);
		add(bt[1]);
		bt[2]=new JButton("Previous");
		bt[2].setBounds(230,530,130,30);
		bt[2].setFont(f);
		if(j==0||j==1)
		{
				bt[2].setEnabled(false);
		}
		else
		{
			bt[2].setEnabled(true);
		}
		add(bt[2]);
		String s="";
		ta.setText(ques);
		lb[2].setText(op1);
		lb[3].setText(op2);
		lb[4].setText(op3);
		lb[5].setText(op4);
		//tf.setText(j);
		rb[0].addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent ae)
			{
				rbv = ae.getActionCommand();
					bt[1].setEnabled(true);
			}
		});
		rb[1].addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent ae)
			{
				rbv = ae.getActionCommand();
				bt[1].setEnabled(true);
			}
		});
		rb[2].addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent ae)
			{
				rbv = ae.getActionCommand();
				bt[1].setEnabled(true);
			}
		});
		rb[3].addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent ae)
			{
				rbv = ae.getActionCommand();
				bt[1].setEnabled(true);
			}
		});
		
			bt[1].addActionListener(new ActionListener()
			{
				public void actionPerformed(ActionEvent ae)
				{
					String gett = ae.getActionCommand();
					int n=JOptionPane.showConfirmDialog(null,"Really want to submit the answer","Confirm Dialog",JOptionPane.YES_NO_OPTION);
					try
					{
						i=rst.getInt(1);
					}
					catch (Exception e)
					{
						e.printStackTrace();
					}
					if(n==JOptionPane.YES_OPTION)
					{
						String da;
						bt[0].setEnabled(true);
					
							if(rbv.equals("A. "))
							{
					
									da="Update data set Name = '"+lb[2].getText()+"'"+" where qid = "+i+"";
							try
							{
								stm.executeUpdate(da);	
								JOptionPane.showMessageDialog(null,"Answer Saved Successfully");
							}
							catch (Exception e)
							{
									e.printStackTrace();
							}
							}	
							else if(rbv.equals("B. "))
							{
								da="Update data Set Name = '"+lb[3].getText()+"'"+"where qid = "+i+"";
							try
							{
								stm.executeUpdate(da);	
								JOptionPane.showMessageDialog(null,"Answer Saved Successfully");
							}
								catch (Exception e)
							{
								e.printStackTrace();
							}
					
							}
							else if(rbv.equals("C. "))
							{
								da="Update data set Name = '"+lb[4].getText()+"'"+"where qid = "+i+"";
							try
							{
								stm.executeUpdate(da);	
								JOptionPane.showMessageDialog(null,"Answer Saved Successfully");
							}
							catch (Exception e)
							{
									e.printStackTrace();
							}
						
							}
							else
							{
								da="Update data set Name = '"+lb[5].getText()+"'"+"where qid = "+i+"";
							try
							{
								stm.executeUpdate(da);	
								JOptionPane.showMessageDialog(null,"Answer Saved Successfully");
							}
							catch (Exception e)
							{
								e.printStackTrace();
							}
						
							}
					}
			
					}
			});
		//next button
		bt[0].addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent ae)
			{
				int k=0;
				try
				{
					rst.next();	
					k=rst.getInt(1);
				}
				catch (Exception e)
				{
					e.printStackTrace();
				}
				dispose();
				if(k==25)
				{
					
					new endpage(rst);
				}
				else 
					new quiz(rst,"Submit");
			}
		});
		bt[2].addActionListener(new ActionListener()
		{
			public void actionPerformed(ActionEvent ae)
			{
				try
				{
					rst.previous();
					dispose();
					new quiz(rst,"Update");
					
				}
				catch (Exception e)
				{
						e.printStackTrace();
				}
			}
		});
		setVisible(true);
	}
	//public static void main(String args[])
	//{
	//		new quiz();
	//}
}
